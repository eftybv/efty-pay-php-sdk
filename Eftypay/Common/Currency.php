<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: common/finance.proto

namespace Eftypay\Common;

use UnexpectedValueException;

/**
 * Currency holds the supported currencies.
 *
 * Protobuf type <code>eftypay.common.Currency</code>
 */
class Currency
{
    /**
     * Generated from protobuf enum <code>CURRENCY_NONE = 0;</code>
     */
    const CURRENCY_NONE = 0;
    /**
     * Generated from protobuf enum <code>USD = 1;</code>
     */
    const USD = 1;
    /**
     * Generated from protobuf enum <code>EUR = 2;</code>
     */
    const EUR = 2;
    /**
     * Generated from protobuf enum <code>GBP = 3;</code>
     */
    const GBP = 3;
    /**
     * Generated from protobuf enum <code>AUD = 4;</code>
     */
    const AUD = 4;
    /**
     * Generated from protobuf enum <code>CAD = 5;</code>
     */
    const CAD = 5;

    private static $valueToName = [
        self::CURRENCY_NONE => 'CURRENCY_NONE',
        self::USD => 'USD',
        self::EUR => 'EUR',
        self::GBP => 'GBP',
        self::AUD => 'AUD',
        self::CAD => 'CAD',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

