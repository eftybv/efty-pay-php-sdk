<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: common/encrypt.proto

namespace Eftypay\Common;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * EncryptedLinkRequest is used in endpoints that require data to be passed in encrypted.
 *
 * Generated from protobuf message <code>eftypay.common.EncryptedLinkRequest</code>
 */
class EncryptedLinkRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * encryptedData contains the encrypted data.
     *
     * Generated from protobuf field <code>string encryptedData = 1;</code>
     */
    protected $encryptedData = '';
    /**
     * iv contains the IV used for decryption.
     *
     * Generated from protobuf field <code>string iv = 2;</code>
     */
    protected $iv = '';
    /**
     * keyId contains the KeyId used for decryption (in most cases this is the externalId of the user and the externalIntegratorId of the integrator the user belongs to).
     *
     * Generated from protobuf field <code>string keyId = 3;</code>
     */
    protected $keyId = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $encryptedData
     *           encryptedData contains the encrypted data.
     *     @type string $iv
     *           iv contains the IV used for decryption.
     *     @type string $keyId
     *           keyId contains the KeyId used for decryption (in most cases this is the externalId of the user and the externalIntegratorId of the integrator the user belongs to).
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Common\Encrypt::initOnce();
        parent::__construct($data);
    }

    /**
     * encryptedData contains the encrypted data.
     *
     * Generated from protobuf field <code>string encryptedData = 1;</code>
     * @return string
     */
    public function getEncryptedData()
    {
        return $this->encryptedData;
    }

    /**
     * encryptedData contains the encrypted data.
     *
     * Generated from protobuf field <code>string encryptedData = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setEncryptedData($var)
    {
        GPBUtil::checkString($var, True);
        $this->encryptedData = $var;

        return $this;
    }

    /**
     * iv contains the IV used for decryption.
     *
     * Generated from protobuf field <code>string iv = 2;</code>
     * @return string
     */
    public function getIv()
    {
        return $this->iv;
    }

    /**
     * iv contains the IV used for decryption.
     *
     * Generated from protobuf field <code>string iv = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setIv($var)
    {
        GPBUtil::checkString($var, True);
        $this->iv = $var;

        return $this;
    }

    /**
     * keyId contains the KeyId used for decryption (in most cases this is the externalId of the user and the externalIntegratorId of the integrator the user belongs to).
     *
     * Generated from protobuf field <code>string keyId = 3;</code>
     * @return string
     */
    public function getKeyId()
    {
        return $this->keyId;
    }

    /**
     * keyId contains the KeyId used for decryption (in most cases this is the externalId of the user and the externalIntegratorId of the integrator the user belongs to).
     *
     * Generated from protobuf field <code>string keyId = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setKeyId($var)
    {
        GPBUtil::checkString($var, True);
        $this->keyId = $var;

        return $this;
    }

}

