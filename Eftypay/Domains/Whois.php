<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: public/domains/domain.proto

namespace Eftypay\Domains;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Whois contains the whois information for a domain.
 *
 * Generated from protobuf message <code>eftypay.domains.Whois</code>
 */
class Whois extends \Google\Protobuf\Internal\Message
{
    /**
     * registrarName is the name of the registrar where the domain is currently registered.
     *
     * Generated from protobuf field <code>string registrarName = 1;</code>
     */
    protected $registrarName = '';
    /**
     * registrarIANAID is the IANA ID of the registrar where the domain is currently registered.
     *
     * Generated from protobuf field <code>string registrarIANAID = 2;</code>
     */
    protected $registrarIANAID = '';
    /**
     * eftyPayHasAccountWithRegistrar indicates if Efty Pay has account with the registrar of the domain.
     *
     * Generated from protobuf field <code>bool eftyPayHasAccountWithRegistrar = 3;</code>
     */
    protected $eftyPayHasAccountWithRegistrar = false;
    /**
     * ownerName is the name of the domain owner.
     *
     * Generated from protobuf field <code>string ownerName = 4;</code>
     */
    protected $ownerName = '';
    /**
     * ownerEmail is the email address of the domain owner.
     *
     * Generated from protobuf field <code>string ownerEmail = 5;</code>
     */
    protected $ownerEmail = '';
    /**
     * ownerAddress is the address of the domain owner.
     *
     * Generated from protobuf field <code>.eftypay.common.Address ownerAddress = 6;</code>
     */
    protected $ownerAddress = null;
    /**
     * dnsNameServerHostNames are the DNS name server host names at the time of running the whois.
     *
     * Generated from protobuf field <code>repeated string dnsNameServerHostNames = 7;</code>
     */
    private $dnsNameServerHostNames;
    /**
     * dnsNameServerHostIps are the DNS name server IPs at the time of running the whois.
     *
     * Generated from protobuf field <code>repeated string dnsNameServerHostIps = 8;</code>
     */
    private $dnsNameServerHostIps;
    /**
     * status reflects the current domain status of the domain. A change to domain status will result in a TransactionActivity being added on transaction level.
     *
     * Generated from protobuf field <code>.eftypay.domains.DomainStatus status = 9;</code>
     */
    protected $status = 0;
    /**
     * statusRaw contains the raw domain status returned from the WHOIS query.
     *
     * Generated from protobuf field <code>string statusRaw = 10;</code>
     */
    protected $statusRaw = '';
    /**
     * whoisQueryDate is the date the whois query was executed.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp whoisQueryDate = 11;</code>
     */
    protected $whoisQueryDate = null;
    /**
     * createdDate is the date when the domain name was first registered/created.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp createdDate = 12;</code>
     */
    protected $createdDate = null;
    /**
     * updatedDate is the date when the whois data was last updated with our Whois partner.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp updatedDate = 13;</code>
     */
    protected $updatedDate = null;
    /**
     * expiresDate is the date when the domain name will expire.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp expiresDate = 14;</code>
     */
    protected $expiresDate = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $registrarName
     *           registrarName is the name of the registrar where the domain is currently registered.
     *     @type string $registrarIANAID
     *           registrarIANAID is the IANA ID of the registrar where the domain is currently registered.
     *     @type bool $eftyPayHasAccountWithRegistrar
     *           eftyPayHasAccountWithRegistrar indicates if Efty Pay has account with the registrar of the domain.
     *     @type string $ownerName
     *           ownerName is the name of the domain owner.
     *     @type string $ownerEmail
     *           ownerEmail is the email address of the domain owner.
     *     @type \Eftypay\Common\Address $ownerAddress
     *           ownerAddress is the address of the domain owner.
     *     @type array<string>|\Google\Protobuf\Internal\RepeatedField $dnsNameServerHostNames
     *           dnsNameServerHostNames are the DNS name server host names at the time of running the whois.
     *     @type array<string>|\Google\Protobuf\Internal\RepeatedField $dnsNameServerHostIps
     *           dnsNameServerHostIps are the DNS name server IPs at the time of running the whois.
     *     @type int $status
     *           status reflects the current domain status of the domain. A change to domain status will result in a TransactionActivity being added on transaction level.
     *     @type string $statusRaw
     *           statusRaw contains the raw domain status returned from the WHOIS query.
     *     @type \Google\Protobuf\Timestamp $whoisQueryDate
     *           whoisQueryDate is the date the whois query was executed.
     *     @type \Google\Protobuf\Timestamp $createdDate
     *           createdDate is the date when the domain name was first registered/created.
     *     @type \Google\Protobuf\Timestamp $updatedDate
     *           updatedDate is the date when the whois data was last updated with our Whois partner.
     *     @type \Google\Protobuf\Timestamp $expiresDate
     *           expiresDate is the date when the domain name will expire.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\PBPublic\Domains\Domain::initOnce();
        parent::__construct($data);
    }

    /**
     * registrarName is the name of the registrar where the domain is currently registered.
     *
     * Generated from protobuf field <code>string registrarName = 1;</code>
     * @return string
     */
    public function getRegistrarName()
    {
        return $this->registrarName;
    }

    /**
     * registrarName is the name of the registrar where the domain is currently registered.
     *
     * Generated from protobuf field <code>string registrarName = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setRegistrarName($var)
    {
        GPBUtil::checkString($var, True);
        $this->registrarName = $var;

        return $this;
    }

    /**
     * registrarIANAID is the IANA ID of the registrar where the domain is currently registered.
     *
     * Generated from protobuf field <code>string registrarIANAID = 2;</code>
     * @return string
     */
    public function getRegistrarIANAID()
    {
        return $this->registrarIANAID;
    }

    /**
     * registrarIANAID is the IANA ID of the registrar where the domain is currently registered.
     *
     * Generated from protobuf field <code>string registrarIANAID = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setRegistrarIANAID($var)
    {
        GPBUtil::checkString($var, True);
        $this->registrarIANAID = $var;

        return $this;
    }

    /**
     * eftyPayHasAccountWithRegistrar indicates if Efty Pay has account with the registrar of the domain.
     *
     * Generated from protobuf field <code>bool eftyPayHasAccountWithRegistrar = 3;</code>
     * @return bool
     */
    public function getEftyPayHasAccountWithRegistrar()
    {
        return $this->eftyPayHasAccountWithRegistrar;
    }

    /**
     * eftyPayHasAccountWithRegistrar indicates if Efty Pay has account with the registrar of the domain.
     *
     * Generated from protobuf field <code>bool eftyPayHasAccountWithRegistrar = 3;</code>
     * @param bool $var
     * @return $this
     */
    public function setEftyPayHasAccountWithRegistrar($var)
    {
        GPBUtil::checkBool($var);
        $this->eftyPayHasAccountWithRegistrar = $var;

        return $this;
    }

    /**
     * ownerName is the name of the domain owner.
     *
     * Generated from protobuf field <code>string ownerName = 4;</code>
     * @return string
     */
    public function getOwnerName()
    {
        return $this->ownerName;
    }

    /**
     * ownerName is the name of the domain owner.
     *
     * Generated from protobuf field <code>string ownerName = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setOwnerName($var)
    {
        GPBUtil::checkString($var, True);
        $this->ownerName = $var;

        return $this;
    }

    /**
     * ownerEmail is the email address of the domain owner.
     *
     * Generated from protobuf field <code>string ownerEmail = 5;</code>
     * @return string
     */
    public function getOwnerEmail()
    {
        return $this->ownerEmail;
    }

    /**
     * ownerEmail is the email address of the domain owner.
     *
     * Generated from protobuf field <code>string ownerEmail = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setOwnerEmail($var)
    {
        GPBUtil::checkString($var, True);
        $this->ownerEmail = $var;

        return $this;
    }

    /**
     * ownerAddress is the address of the domain owner.
     *
     * Generated from protobuf field <code>.eftypay.common.Address ownerAddress = 6;</code>
     * @return \Eftypay\Common\Address|null
     */
    public function getOwnerAddress()
    {
        return $this->ownerAddress;
    }

    public function hasOwnerAddress()
    {
        return isset($this->ownerAddress);
    }

    public function clearOwnerAddress()
    {
        unset($this->ownerAddress);
    }

    /**
     * ownerAddress is the address of the domain owner.
     *
     * Generated from protobuf field <code>.eftypay.common.Address ownerAddress = 6;</code>
     * @param \Eftypay\Common\Address $var
     * @return $this
     */
    public function setOwnerAddress($var)
    {
        GPBUtil::checkMessage($var, \Eftypay\Common\Address::class);
        $this->ownerAddress = $var;

        return $this;
    }

    /**
     * dnsNameServerHostNames are the DNS name server host names at the time of running the whois.
     *
     * Generated from protobuf field <code>repeated string dnsNameServerHostNames = 7;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getDnsNameServerHostNames()
    {
        return $this->dnsNameServerHostNames;
    }

    /**
     * dnsNameServerHostNames are the DNS name server host names at the time of running the whois.
     *
     * Generated from protobuf field <code>repeated string dnsNameServerHostNames = 7;</code>
     * @param array<string>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setDnsNameServerHostNames($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->dnsNameServerHostNames = $arr;

        return $this;
    }

    /**
     * dnsNameServerHostIps are the DNS name server IPs at the time of running the whois.
     *
     * Generated from protobuf field <code>repeated string dnsNameServerHostIps = 8;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getDnsNameServerHostIps()
    {
        return $this->dnsNameServerHostIps;
    }

    /**
     * dnsNameServerHostIps are the DNS name server IPs at the time of running the whois.
     *
     * Generated from protobuf field <code>repeated string dnsNameServerHostIps = 8;</code>
     * @param array<string>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setDnsNameServerHostIps($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->dnsNameServerHostIps = $arr;

        return $this;
    }

    /**
     * status reflects the current domain status of the domain. A change to domain status will result in a TransactionActivity being added on transaction level.
     *
     * Generated from protobuf field <code>.eftypay.domains.DomainStatus status = 9;</code>
     * @return int
     */
    public function getStatus()
    {
        return $this->status;
    }

    /**
     * status reflects the current domain status of the domain. A change to domain status will result in a TransactionActivity being added on transaction level.
     *
     * Generated from protobuf field <code>.eftypay.domains.DomainStatus status = 9;</code>
     * @param int $var
     * @return $this
     */
    public function setStatus($var)
    {
        GPBUtil::checkEnum($var, \Eftypay\Domains\DomainStatus::class);
        $this->status = $var;

        return $this;
    }

    /**
     * statusRaw contains the raw domain status returned from the WHOIS query.
     *
     * Generated from protobuf field <code>string statusRaw = 10;</code>
     * @return string
     */
    public function getStatusRaw()
    {
        return $this->statusRaw;
    }

    /**
     * statusRaw contains the raw domain status returned from the WHOIS query.
     *
     * Generated from protobuf field <code>string statusRaw = 10;</code>
     * @param string $var
     * @return $this
     */
    public function setStatusRaw($var)
    {
        GPBUtil::checkString($var, True);
        $this->statusRaw = $var;

        return $this;
    }

    /**
     * whoisQueryDate is the date the whois query was executed.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp whoisQueryDate = 11;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getWhoisQueryDate()
    {
        return $this->whoisQueryDate;
    }

    public function hasWhoisQueryDate()
    {
        return isset($this->whoisQueryDate);
    }

    public function clearWhoisQueryDate()
    {
        unset($this->whoisQueryDate);
    }

    /**
     * whoisQueryDate is the date the whois query was executed.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp whoisQueryDate = 11;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setWhoisQueryDate($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->whoisQueryDate = $var;

        return $this;
    }

    /**
     * createdDate is the date when the domain name was first registered/created.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp createdDate = 12;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getCreatedDate()
    {
        return $this->createdDate;
    }

    public function hasCreatedDate()
    {
        return isset($this->createdDate);
    }

    public function clearCreatedDate()
    {
        unset($this->createdDate);
    }

    /**
     * createdDate is the date when the domain name was first registered/created.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp createdDate = 12;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setCreatedDate($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->createdDate = $var;

        return $this;
    }

    /**
     * updatedDate is the date when the whois data was last updated with our Whois partner.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp updatedDate = 13;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getUpdatedDate()
    {
        return $this->updatedDate;
    }

    public function hasUpdatedDate()
    {
        return isset($this->updatedDate);
    }

    public function clearUpdatedDate()
    {
        unset($this->updatedDate);
    }

    /**
     * updatedDate is the date when the whois data was last updated with our Whois partner.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp updatedDate = 13;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setUpdatedDate($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->updatedDate = $var;

        return $this;
    }

    /**
     * expiresDate is the date when the domain name will expire.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp expiresDate = 14;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getExpiresDate()
    {
        return $this->expiresDate;
    }

    public function hasExpiresDate()
    {
        return isset($this->expiresDate);
    }

    public function clearExpiresDate()
    {
        unset($this->expiresDate);
    }

    /**
     * expiresDate is the date when the domain name will expire.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp expiresDate = 14;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setExpiresDate($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->expiresDate = $var;

        return $this;
    }

}

