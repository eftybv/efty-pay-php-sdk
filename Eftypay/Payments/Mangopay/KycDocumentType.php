<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: public/payments/mangopay/onboarding.proto

namespace Eftypay\Payments\Mangopay;

use UnexpectedValueException;

/**
 * KycDocumentType contains the KYC document type.
 *
 * Protobuf type <code>eftypay.payments.mangopay.KycDocumentType</code>
 */
class KycDocumentType
{
    /**
     * KYC_DOCUMENT_TYPE_NONE is the default document type (which is zero and not transmitted on the wire).
     *
     * Generated from protobuf enum <code>KYC_DOCUMENT_TYPE_NONE = 0;</code>
     */
    const KYC_DOCUMENT_TYPE_NONE = 0;
    /**
     * IDENTITY_PROOF is used for identity documents.
     *
     * Generated from protobuf enum <code>IDENTITY_PROOF = 1;</code>
     */
    const IDENTITY_PROOF = 1;
    /**
     * REGISTRATION_PROOF is used for registration documents.
     *
     * Generated from protobuf enum <code>REGISTRATION_PROOF = 2;</code>
     */
    const REGISTRATION_PROOF = 2;
    /**
     * ARTICLES_OF_ASSOCIATION is used for articles of association documents.
     *
     * Generated from protobuf enum <code>ARTICLES_OF_ASSOCIATION = 3;</code>
     */
    const ARTICLES_OF_ASSOCIATION = 3;
    /**
     * SHAREHOLDER_DECLARATION is used for shareholder declaration documents.
     *
     * Generated from protobuf enum <code>SHAREHOLDER_DECLARATION = 4;</code>
     */
    const SHAREHOLDER_DECLARATION = 4;
    /**
     * ADDRESS_PROOF is used for address proof documents.
     *
     * Generated from protobuf enum <code>ADDRESS_PROOF = 5;</code>
     */
    const ADDRESS_PROOF = 5;

    private static $valueToName = [
        self::KYC_DOCUMENT_TYPE_NONE => 'KYC_DOCUMENT_TYPE_NONE',
        self::IDENTITY_PROOF => 'IDENTITY_PROOF',
        self::REGISTRATION_PROOF => 'REGISTRATION_PROOF',
        self::ARTICLES_OF_ASSOCIATION => 'ARTICLES_OF_ASSOCIATION',
        self::SHAREHOLDER_DECLARATION => 'SHAREHOLDER_DECLARATION',
        self::ADDRESS_PROOF => 'ADDRESS_PROOF',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

