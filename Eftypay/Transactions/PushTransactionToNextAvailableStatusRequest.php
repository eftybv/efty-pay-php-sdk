<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: public/transactions/transaction.proto

namespace Eftypay\Transactions;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * PushTransactionToNextAvailableStatusRequest contains the request details for pushing the transaction into it's next available status & sub-status.
 *
 * Generated from protobuf message <code>eftypay.transactions.PushTransactionToNextAvailableStatusRequest</code>
 */
class PushTransactionToNextAvailableStatusRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * transactionId is the transaction ID to change the status for.
     *
     * Generated from protobuf field <code>.eftypay.common.Id transactionId = 1;</code>
     */
    protected $transactionId = null;
    /**
     * statusContext contains the transaction party to get the next status for.
     * If not provided the next available status needs to apply to both BUYER and SELLER in the transaction.
     *
     * Generated from protobuf field <code>.eftypay.transactions.activity.TransactionParty statusContext = 2;</code>
     */
    protected $statusContext = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Eftypay\Common\Id $transactionId
     *           transactionId is the transaction ID to change the status for.
     *     @type int $statusContext
     *           statusContext contains the transaction party to get the next status for.
     *           If not provided the next available status needs to apply to both BUYER and SELLER in the transaction.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\PBPublic\Transactions\Transaction::initOnce();
        parent::__construct($data);
    }

    /**
     * transactionId is the transaction ID to change the status for.
     *
     * Generated from protobuf field <code>.eftypay.common.Id transactionId = 1;</code>
     * @return \Eftypay\Common\Id|null
     */
    public function getTransactionId()
    {
        return $this->transactionId;
    }

    public function hasTransactionId()
    {
        return isset($this->transactionId);
    }

    public function clearTransactionId()
    {
        unset($this->transactionId);
    }

    /**
     * transactionId is the transaction ID to change the status for.
     *
     * Generated from protobuf field <code>.eftypay.common.Id transactionId = 1;</code>
     * @param \Eftypay\Common\Id $var
     * @return $this
     */
    public function setTransactionId($var)
    {
        GPBUtil::checkMessage($var, \Eftypay\Common\Id::class);
        $this->transactionId = $var;

        return $this;
    }

    /**
     * statusContext contains the transaction party to get the next status for.
     * If not provided the next available status needs to apply to both BUYER and SELLER in the transaction.
     *
     * Generated from protobuf field <code>.eftypay.transactions.activity.TransactionParty statusContext = 2;</code>
     * @return int
     */
    public function getStatusContext()
    {
        return $this->statusContext;
    }

    /**
     * statusContext contains the transaction party to get the next status for.
     * If not provided the next available status needs to apply to both BUYER and SELLER in the transaction.
     *
     * Generated from protobuf field <code>.eftypay.transactions.activity.TransactionParty statusContext = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setStatusContext($var)
    {
        GPBUtil::checkEnum($var, \Eftypay\Transactions\Activity\TransactionParty::class);
        $this->statusContext = $var;

        return $this;
    }

}

