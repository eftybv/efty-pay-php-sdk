<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: public/transactions/transaction.proto

namespace Eftypay\Transactions;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Transaction contains all details for a transaction.
 *
 * Generated from protobuf message <code>eftypay.transactions.Transaction</code>
 */
class Transaction extends \Google\Protobuf\Internal\Message
{
    /**
     * id is unique ID of the transaction. The ID is a compressed 22 character UUID. The ID is autogenerated.
     *
     * Generated from protobuf field <code>string id = 1;</code>
     */
    protected $id = '';
    /**
     * digitalAssetExternalId is an external ID that is populated to allow for querying on transactions for an external ID (for example, to get all transactions for a domain name).
     *
     * Generated from protobuf field <code>string digitalAssetExternalId = 2;</code>
     */
    protected $digitalAssetExternalId = '';
    /**
     * assetType corresponds with the type of digital asset.
     *
     * Generated from protobuf field <code>.eftypay.transactions.AssetType assetType = 3;</code>
     */
    protected $assetType = 0;
    /**
     * DigitalAsset contains details about the digital asset that this transaction is for.
     * A transaction is always for one digital asset type.
     *
     * Generated from protobuf field <code>.eftypay.transactions.DigitalAsset digitalAsset = 4;</code>
     */
    protected $digitalAsset = null;
    /**
     * buyer is the buyer of the digital asset. Depending on which payment integrations & settings are enabled for the integrator, buyers might be created with certain payments integrator.
     *
     * Generated from protobuf field <code>.eftypay.users.User buyer = 5;</code>
     */
    protected $buyer = null;
    /**
     * seller is the seller of the digital asset. Depending on which payment integrations & settings are enabled for the integrator, buyers might be created with certain payments integrator.
     *
     * Generated from protobuf field <code>.eftypay.users.User seller = 6;</code>
     */
    protected $seller = null;
    /**
     * currency is the currency of the transaction.
     *
     * Generated from protobuf field <code>.eftypay.common.Currency currency = 7;</code>
     */
    protected $currency = 0;
    /**
     * vatDetails contains the VAT details of the transaction. This field is readonly, set and calculated by Efty Pay.
     *
     * Generated from protobuf field <code>.eftypay.transactions.VatDetails vatDetails = 8;</code>
     */
    protected $vatDetails = null;
    /**
     * assetAmountExcVat is the asset amount (in cents) exclusive of VAT.  (e.g.: 1000000)
     *
     * Generated from protobuf field <code>int64 assetAmountExcVat = 9;</code>
     */
    protected $assetAmountExcVat = 0;
    /**
     * expressFeeAmountExcVat is the express fee amount (in cents) and is calculated based on assetAmountExcVat. This field is readonly, set and calculated by Efty Pay. (e.g.: 10000)
     *
     * Generated from protobuf field <code>int64 expressFeeAmountExcVat = 10;</code>
     */
    protected $expressFeeAmountExcVat = 0;
    /**
     * commissionAmountExcVat is the total commission amount (in cents) calculated based on assetAmountExcVat. This field is readonly, set and calculated by Efty Pay. (e.g.: 10000)
     *
     * Generated from protobuf field <code>int64 commissionAmountExcVat = 11;</code>
     */
    protected $commissionAmountExcVat = 0;
    /**
     * assetAmountIncVat is the total asset amount (in cents) including VAT. This field is readonly and calculated and set by Efty Pay. (e.g.: 1100000)
     *
     * Generated from protobuf field <code>int64 assetAmountIncVat = 12;</code>
     */
    protected $assetAmountIncVat = 0;
    /**
     * expressFeeAmountIncVat is the total express fee amount (in cents) including VAT. This field is readonly and calculated and set by Efty Pay. (e.g.: 50500)
     *
     * Generated from protobuf field <code>int64 expressFeeAmountIncVat = 13;</code>
     */
    protected $expressFeeAmountIncVat = 0;
    /**
     * commissionAmountIncVat is the commission amount (in cents) including VAT. This field is readonly and calculated and set by Efty Pay. (e.g.: 50500)
     *
     * Generated from protobuf field <code>int64 commissionAmountIncVat = 14;</code>
     */
    protected $commissionAmountIncVat = 0;
    /**
     * totalAmountToBePaidByBuyer is the total amount (in cents), to be paid by the buyer and is calculated from assetAmountIncVat+expressFeeAmountIncVat. This field is readonly and calculated and set by Efty Pay.
     *
     * Generated from protobuf field <code>int64 totalAmountToBePaidByBuyer = 15;</code>
     */
    protected $totalAmountToBePaidByBuyer = 0;
    /**
     * totalAmountSellerReceives is the total amount (in cents) the seller receives and is calculated from assetAmountIncVat - commissionAmountIncVat. This field is readonly and calculated and set by Efty Pay.
     *
     * Generated from protobuf field <code>int64 totalAmountSellerReceives = 16;</code>
     */
    protected $totalAmountSellerReceives = 0;
    /**
     * commissionSettings are the commission settings for the transaction.
     * These are derived from the integrator settings, and can be overwritten by an Efty Pay admin on a transaction level.
     *
     * Generated from protobuf field <code>.eftypay.integrators.CommissionSettings commissionSettings = 17;</code>
     */
    protected $commissionSettings = null;
    /**
     * status contains the status and sub-status of a transaction. The key is the stringified version of the eftypay.transactions.activity.TransactionStatus enum.
     *
     * Generated from protobuf field <code>map<string, .eftypay.transactions.activity.TransactionSubStatus> status = 18;</code>
     */
    private $status;
    /**
     * auditTrail contains an audit trail for changes to the transaction. The audit trail is immutable.
     *
     * Generated from protobuf field <code>repeated .eftypay.transactions.activity.TransactionActivity auditTrail = 19;</code>
     */
    private $auditTrail;
    /**
     * messageHistory contains messages for the transaction. The message history is immutable.
     *
     * Generated from protobuf field <code>repeated .eftypay.messages.Message messageHistory = 20;</code>
     */
    private $messageHistory;
    /**
     * utmParameters contains UTM tracking parameters for the transaction.
     *
     * Generated from protobuf field <code>.eftypay.transactions.UtmParameters utmParameters = 21;</code>
     */
    protected $utmParameters = null;
    /**
     * checkoutDetails contains details re. the checkout status & URL for the transaction.
     *
     * Generated from protobuf field <code>.eftypay.payments.CheckoutDetails checkoutDetails = 22;</code>
     */
    protected $checkoutDetails = null;
    /**
     * created is the timestamp the transaction was created.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp created = 23;</code>
     */
    protected $created = null;
    /**
     * createdBy is the user that created the transaction.
     *
     * Generated from protobuf field <code>.eftypay.users.User createdBy = 24;</code>
     */
    protected $createdBy = null;
    /**
     * update is the timestamp the transaction was last updated.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp updated = 25;</code>
     */
    protected $updated = null;
    /**
     * updatedBy is the user that last updated the transaction.
     *
     * Generated from protobuf field <code>.eftypay.users.User updatedBy = 26;</code>
     */
    protected $updatedBy = null;
    /**
     * completed is the timestamp the transaction was finalized.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp finalized = 27;</code>
     */
    protected $finalized = null;
    /**
     * initiatedBy indicates which type of party initiated the transaction.
     * The backend uses different email templates / workflow based on the type of party that initiated the transaction.
     *
     * Generated from protobuf field <code>.eftypay.transactions.activity.TransactionParty initiatedBy = 28;</code>
     */
    protected $initiatedBy = 0;
    /**
     * metaData contains transaction meta-data. This can be set and updated by all parties of a transaction.
     *
     * Generated from protobuf field <code>map<string, string> metaData = 29;</code>
     */
    private $metaData;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $id
     *           id is unique ID of the transaction. The ID is a compressed 22 character UUID. The ID is autogenerated.
     *     @type string $digitalAssetExternalId
     *           digitalAssetExternalId is an external ID that is populated to allow for querying on transactions for an external ID (for example, to get all transactions for a domain name).
     *     @type int $assetType
     *           assetType corresponds with the type of digital asset.
     *     @type \Eftypay\Transactions\DigitalAsset $digitalAsset
     *           DigitalAsset contains details about the digital asset that this transaction is for.
     *           A transaction is always for one digital asset type.
     *     @type \Eftypay\Users\User $buyer
     *           buyer is the buyer of the digital asset. Depending on which payment integrations & settings are enabled for the integrator, buyers might be created with certain payments integrator.
     *     @type \Eftypay\Users\User $seller
     *           seller is the seller of the digital asset. Depending on which payment integrations & settings are enabled for the integrator, buyers might be created with certain payments integrator.
     *     @type int $currency
     *           currency is the currency of the transaction.
     *     @type \Eftypay\Transactions\VatDetails $vatDetails
     *           vatDetails contains the VAT details of the transaction. This field is readonly, set and calculated by Efty Pay.
     *     @type int|string $assetAmountExcVat
     *           assetAmountExcVat is the asset amount (in cents) exclusive of VAT.  (e.g.: 1000000)
     *     @type int|string $expressFeeAmountExcVat
     *           expressFeeAmountExcVat is the express fee amount (in cents) and is calculated based on assetAmountExcVat. This field is readonly, set and calculated by Efty Pay. (e.g.: 10000)
     *     @type int|string $commissionAmountExcVat
     *           commissionAmountExcVat is the total commission amount (in cents) calculated based on assetAmountExcVat. This field is readonly, set and calculated by Efty Pay. (e.g.: 10000)
     *     @type int|string $assetAmountIncVat
     *           assetAmountIncVat is the total asset amount (in cents) including VAT. This field is readonly and calculated and set by Efty Pay. (e.g.: 1100000)
     *     @type int|string $expressFeeAmountIncVat
     *           expressFeeAmountIncVat is the total express fee amount (in cents) including VAT. This field is readonly and calculated and set by Efty Pay. (e.g.: 50500)
     *     @type int|string $commissionAmountIncVat
     *           commissionAmountIncVat is the commission amount (in cents) including VAT. This field is readonly and calculated and set by Efty Pay. (e.g.: 50500)
     *     @type int|string $totalAmountToBePaidByBuyer
     *           totalAmountToBePaidByBuyer is the total amount (in cents), to be paid by the buyer and is calculated from assetAmountIncVat+expressFeeAmountIncVat. This field is readonly and calculated and set by Efty Pay.
     *     @type int|string $totalAmountSellerReceives
     *           totalAmountSellerReceives is the total amount (in cents) the seller receives and is calculated from assetAmountIncVat - commissionAmountIncVat. This field is readonly and calculated and set by Efty Pay.
     *     @type \Eftypay\Integrators\CommissionSettings $commissionSettings
     *           commissionSettings are the commission settings for the transaction.
     *           These are derived from the integrator settings, and can be overwritten by an Efty Pay admin on a transaction level.
     *     @type array|\Google\Protobuf\Internal\MapField $status
     *           status contains the status and sub-status of a transaction. The key is the stringified version of the eftypay.transactions.activity.TransactionStatus enum.
     *     @type array<\Eftypay\Transactions\Activity\TransactionActivity>|\Google\Protobuf\Internal\RepeatedField $auditTrail
     *           auditTrail contains an audit trail for changes to the transaction. The audit trail is immutable.
     *     @type array<\Eftypay\Messages\Message>|\Google\Protobuf\Internal\RepeatedField $messageHistory
     *           messageHistory contains messages for the transaction. The message history is immutable.
     *     @type \Eftypay\Transactions\UtmParameters $utmParameters
     *           utmParameters contains UTM tracking parameters for the transaction.
     *     @type \Eftypay\Payments\CheckoutDetails $checkoutDetails
     *           checkoutDetails contains details re. the checkout status & URL for the transaction.
     *     @type \Google\Protobuf\Timestamp $created
     *           created is the timestamp the transaction was created.
     *     @type \Eftypay\Users\User $createdBy
     *           createdBy is the user that created the transaction.
     *     @type \Google\Protobuf\Timestamp $updated
     *           update is the timestamp the transaction was last updated.
     *     @type \Eftypay\Users\User $updatedBy
     *           updatedBy is the user that last updated the transaction.
     *     @type \Google\Protobuf\Timestamp $finalized
     *           completed is the timestamp the transaction was finalized.
     *     @type int $initiatedBy
     *           initiatedBy indicates which type of party initiated the transaction.
     *           The backend uses different email templates / workflow based on the type of party that initiated the transaction.
     *     @type array|\Google\Protobuf\Internal\MapField $metaData
     *           metaData contains transaction meta-data. This can be set and updated by all parties of a transaction.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\PBPublic\Transactions\Transaction::initOnce();
        parent::__construct($data);
    }

    /**
     * id is unique ID of the transaction. The ID is a compressed 22 character UUID. The ID is autogenerated.
     *
     * Generated from protobuf field <code>string id = 1;</code>
     * @return string
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * id is unique ID of the transaction. The ID is a compressed 22 character UUID. The ID is autogenerated.
     *
     * Generated from protobuf field <code>string id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkString($var, True);
        $this->id = $var;

        return $this;
    }

    /**
     * digitalAssetExternalId is an external ID that is populated to allow for querying on transactions for an external ID (for example, to get all transactions for a domain name).
     *
     * Generated from protobuf field <code>string digitalAssetExternalId = 2;</code>
     * @return string
     */
    public function getDigitalAssetExternalId()
    {
        return $this->digitalAssetExternalId;
    }

    /**
     * digitalAssetExternalId is an external ID that is populated to allow for querying on transactions for an external ID (for example, to get all transactions for a domain name).
     *
     * Generated from protobuf field <code>string digitalAssetExternalId = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setDigitalAssetExternalId($var)
    {
        GPBUtil::checkString($var, True);
        $this->digitalAssetExternalId = $var;

        return $this;
    }

    /**
     * assetType corresponds with the type of digital asset.
     *
     * Generated from protobuf field <code>.eftypay.transactions.AssetType assetType = 3;</code>
     * @return int
     */
    public function getAssetType()
    {
        return $this->assetType;
    }

    /**
     * assetType corresponds with the type of digital asset.
     *
     * Generated from protobuf field <code>.eftypay.transactions.AssetType assetType = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setAssetType($var)
    {
        GPBUtil::checkEnum($var, \Eftypay\Transactions\AssetType::class);
        $this->assetType = $var;

        return $this;
    }

    /**
     * DigitalAsset contains details about the digital asset that this transaction is for.
     * A transaction is always for one digital asset type.
     *
     * Generated from protobuf field <code>.eftypay.transactions.DigitalAsset digitalAsset = 4;</code>
     * @return \Eftypay\Transactions\DigitalAsset|null
     */
    public function getDigitalAsset()
    {
        return $this->digitalAsset;
    }

    public function hasDigitalAsset()
    {
        return isset($this->digitalAsset);
    }

    public function clearDigitalAsset()
    {
        unset($this->digitalAsset);
    }

    /**
     * DigitalAsset contains details about the digital asset that this transaction is for.
     * A transaction is always for one digital asset type.
     *
     * Generated from protobuf field <code>.eftypay.transactions.DigitalAsset digitalAsset = 4;</code>
     * @param \Eftypay\Transactions\DigitalAsset $var
     * @return $this
     */
    public function setDigitalAsset($var)
    {
        GPBUtil::checkMessage($var, \Eftypay\Transactions\DigitalAsset::class);
        $this->digitalAsset = $var;

        return $this;
    }

    /**
     * buyer is the buyer of the digital asset. Depending on which payment integrations & settings are enabled for the integrator, buyers might be created with certain payments integrator.
     *
     * Generated from protobuf field <code>.eftypay.users.User buyer = 5;</code>
     * @return \Eftypay\Users\User|null
     */
    public function getBuyer()
    {
        return $this->buyer;
    }

    public function hasBuyer()
    {
        return isset($this->buyer);
    }

    public function clearBuyer()
    {
        unset($this->buyer);
    }

    /**
     * buyer is the buyer of the digital asset. Depending on which payment integrations & settings are enabled for the integrator, buyers might be created with certain payments integrator.
     *
     * Generated from protobuf field <code>.eftypay.users.User buyer = 5;</code>
     * @param \Eftypay\Users\User $var
     * @return $this
     */
    public function setBuyer($var)
    {
        GPBUtil::checkMessage($var, \Eftypay\Users\User::class);
        $this->buyer = $var;

        return $this;
    }

    /**
     * seller is the seller of the digital asset. Depending on which payment integrations & settings are enabled for the integrator, buyers might be created with certain payments integrator.
     *
     * Generated from protobuf field <code>.eftypay.users.User seller = 6;</code>
     * @return \Eftypay\Users\User|null
     */
    public function getSeller()
    {
        return $this->seller;
    }

    public function hasSeller()
    {
        return isset($this->seller);
    }

    public function clearSeller()
    {
        unset($this->seller);
    }

    /**
     * seller is the seller of the digital asset. Depending on which payment integrations & settings are enabled for the integrator, buyers might be created with certain payments integrator.
     *
     * Generated from protobuf field <code>.eftypay.users.User seller = 6;</code>
     * @param \Eftypay\Users\User $var
     * @return $this
     */
    public function setSeller($var)
    {
        GPBUtil::checkMessage($var, \Eftypay\Users\User::class);
        $this->seller = $var;

        return $this;
    }

    /**
     * currency is the currency of the transaction.
     *
     * Generated from protobuf field <code>.eftypay.common.Currency currency = 7;</code>
     * @return int
     */
    public function getCurrency()
    {
        return $this->currency;
    }

    /**
     * currency is the currency of the transaction.
     *
     * Generated from protobuf field <code>.eftypay.common.Currency currency = 7;</code>
     * @param int $var
     * @return $this
     */
    public function setCurrency($var)
    {
        GPBUtil::checkEnum($var, \Eftypay\Common\Currency::class);
        $this->currency = $var;

        return $this;
    }

    /**
     * vatDetails contains the VAT details of the transaction. This field is readonly, set and calculated by Efty Pay.
     *
     * Generated from protobuf field <code>.eftypay.transactions.VatDetails vatDetails = 8;</code>
     * @return \Eftypay\Transactions\VatDetails|null
     */
    public function getVatDetails()
    {
        return $this->vatDetails;
    }

    public function hasVatDetails()
    {
        return isset($this->vatDetails);
    }

    public function clearVatDetails()
    {
        unset($this->vatDetails);
    }

    /**
     * vatDetails contains the VAT details of the transaction. This field is readonly, set and calculated by Efty Pay.
     *
     * Generated from protobuf field <code>.eftypay.transactions.VatDetails vatDetails = 8;</code>
     * @param \Eftypay\Transactions\VatDetails $var
     * @return $this
     */
    public function setVatDetails($var)
    {
        GPBUtil::checkMessage($var, \Eftypay\Transactions\VatDetails::class);
        $this->vatDetails = $var;

        return $this;
    }

    /**
     * assetAmountExcVat is the asset amount (in cents) exclusive of VAT.  (e.g.: 1000000)
     *
     * Generated from protobuf field <code>int64 assetAmountExcVat = 9;</code>
     * @return int|string
     */
    public function getAssetAmountExcVat()
    {
        return $this->assetAmountExcVat;
    }

    /**
     * assetAmountExcVat is the asset amount (in cents) exclusive of VAT.  (e.g.: 1000000)
     *
     * Generated from protobuf field <code>int64 assetAmountExcVat = 9;</code>
     * @param int|string $var
     * @return $this
     */
    public function setAssetAmountExcVat($var)
    {
        GPBUtil::checkInt64($var);
        $this->assetAmountExcVat = $var;

        return $this;
    }

    /**
     * expressFeeAmountExcVat is the express fee amount (in cents) and is calculated based on assetAmountExcVat. This field is readonly, set and calculated by Efty Pay. (e.g.: 10000)
     *
     * Generated from protobuf field <code>int64 expressFeeAmountExcVat = 10;</code>
     * @return int|string
     */
    public function getExpressFeeAmountExcVat()
    {
        return $this->expressFeeAmountExcVat;
    }

    /**
     * expressFeeAmountExcVat is the express fee amount (in cents) and is calculated based on assetAmountExcVat. This field is readonly, set and calculated by Efty Pay. (e.g.: 10000)
     *
     * Generated from protobuf field <code>int64 expressFeeAmountExcVat = 10;</code>
     * @param int|string $var
     * @return $this
     */
    public function setExpressFeeAmountExcVat($var)
    {
        GPBUtil::checkInt64($var);
        $this->expressFeeAmountExcVat = $var;

        return $this;
    }

    /**
     * commissionAmountExcVat is the total commission amount (in cents) calculated based on assetAmountExcVat. This field is readonly, set and calculated by Efty Pay. (e.g.: 10000)
     *
     * Generated from protobuf field <code>int64 commissionAmountExcVat = 11;</code>
     * @return int|string
     */
    public function getCommissionAmountExcVat()
    {
        return $this->commissionAmountExcVat;
    }

    /**
     * commissionAmountExcVat is the total commission amount (in cents) calculated based on assetAmountExcVat. This field is readonly, set and calculated by Efty Pay. (e.g.: 10000)
     *
     * Generated from protobuf field <code>int64 commissionAmountExcVat = 11;</code>
     * @param int|string $var
     * @return $this
     */
    public function setCommissionAmountExcVat($var)
    {
        GPBUtil::checkInt64($var);
        $this->commissionAmountExcVat = $var;

        return $this;
    }

    /**
     * assetAmountIncVat is the total asset amount (in cents) including VAT. This field is readonly and calculated and set by Efty Pay. (e.g.: 1100000)
     *
     * Generated from protobuf field <code>int64 assetAmountIncVat = 12;</code>
     * @return int|string
     */
    public function getAssetAmountIncVat()
    {
        return $this->assetAmountIncVat;
    }

    /**
     * assetAmountIncVat is the total asset amount (in cents) including VAT. This field is readonly and calculated and set by Efty Pay. (e.g.: 1100000)
     *
     * Generated from protobuf field <code>int64 assetAmountIncVat = 12;</code>
     * @param int|string $var
     * @return $this
     */
    public function setAssetAmountIncVat($var)
    {
        GPBUtil::checkInt64($var);
        $this->assetAmountIncVat = $var;

        return $this;
    }

    /**
     * expressFeeAmountIncVat is the total express fee amount (in cents) including VAT. This field is readonly and calculated and set by Efty Pay. (e.g.: 50500)
     *
     * Generated from protobuf field <code>int64 expressFeeAmountIncVat = 13;</code>
     * @return int|string
     */
    public function getExpressFeeAmountIncVat()
    {
        return $this->expressFeeAmountIncVat;
    }

    /**
     * expressFeeAmountIncVat is the total express fee amount (in cents) including VAT. This field is readonly and calculated and set by Efty Pay. (e.g.: 50500)
     *
     * Generated from protobuf field <code>int64 expressFeeAmountIncVat = 13;</code>
     * @param int|string $var
     * @return $this
     */
    public function setExpressFeeAmountIncVat($var)
    {
        GPBUtil::checkInt64($var);
        $this->expressFeeAmountIncVat = $var;

        return $this;
    }

    /**
     * commissionAmountIncVat is the commission amount (in cents) including VAT. This field is readonly and calculated and set by Efty Pay. (e.g.: 50500)
     *
     * Generated from protobuf field <code>int64 commissionAmountIncVat = 14;</code>
     * @return int|string
     */
    public function getCommissionAmountIncVat()
    {
        return $this->commissionAmountIncVat;
    }

    /**
     * commissionAmountIncVat is the commission amount (in cents) including VAT. This field is readonly and calculated and set by Efty Pay. (e.g.: 50500)
     *
     * Generated from protobuf field <code>int64 commissionAmountIncVat = 14;</code>
     * @param int|string $var
     * @return $this
     */
    public function setCommissionAmountIncVat($var)
    {
        GPBUtil::checkInt64($var);
        $this->commissionAmountIncVat = $var;

        return $this;
    }

    /**
     * totalAmountToBePaidByBuyer is the total amount (in cents), to be paid by the buyer and is calculated from assetAmountIncVat+expressFeeAmountIncVat. This field is readonly and calculated and set by Efty Pay.
     *
     * Generated from protobuf field <code>int64 totalAmountToBePaidByBuyer = 15;</code>
     * @return int|string
     */
    public function getTotalAmountToBePaidByBuyer()
    {
        return $this->totalAmountToBePaidByBuyer;
    }

    /**
     * totalAmountToBePaidByBuyer is the total amount (in cents), to be paid by the buyer and is calculated from assetAmountIncVat+expressFeeAmountIncVat. This field is readonly and calculated and set by Efty Pay.
     *
     * Generated from protobuf field <code>int64 totalAmountToBePaidByBuyer = 15;</code>
     * @param int|string $var
     * @return $this
     */
    public function setTotalAmountToBePaidByBuyer($var)
    {
        GPBUtil::checkInt64($var);
        $this->totalAmountToBePaidByBuyer = $var;

        return $this;
    }

    /**
     * totalAmountSellerReceives is the total amount (in cents) the seller receives and is calculated from assetAmountIncVat - commissionAmountIncVat. This field is readonly and calculated and set by Efty Pay.
     *
     * Generated from protobuf field <code>int64 totalAmountSellerReceives = 16;</code>
     * @return int|string
     */
    public function getTotalAmountSellerReceives()
    {
        return $this->totalAmountSellerReceives;
    }

    /**
     * totalAmountSellerReceives is the total amount (in cents) the seller receives and is calculated from assetAmountIncVat - commissionAmountIncVat. This field is readonly and calculated and set by Efty Pay.
     *
     * Generated from protobuf field <code>int64 totalAmountSellerReceives = 16;</code>
     * @param int|string $var
     * @return $this
     */
    public function setTotalAmountSellerReceives($var)
    {
        GPBUtil::checkInt64($var);
        $this->totalAmountSellerReceives = $var;

        return $this;
    }

    /**
     * commissionSettings are the commission settings for the transaction.
     * These are derived from the integrator settings, and can be overwritten by an Efty Pay admin on a transaction level.
     *
     * Generated from protobuf field <code>.eftypay.integrators.CommissionSettings commissionSettings = 17;</code>
     * @return \Eftypay\Integrators\CommissionSettings|null
     */
    public function getCommissionSettings()
    {
        return $this->commissionSettings;
    }

    public function hasCommissionSettings()
    {
        return isset($this->commissionSettings);
    }

    public function clearCommissionSettings()
    {
        unset($this->commissionSettings);
    }

    /**
     * commissionSettings are the commission settings for the transaction.
     * These are derived from the integrator settings, and can be overwritten by an Efty Pay admin on a transaction level.
     *
     * Generated from protobuf field <code>.eftypay.integrators.CommissionSettings commissionSettings = 17;</code>
     * @param \Eftypay\Integrators\CommissionSettings $var
     * @return $this
     */
    public function setCommissionSettings($var)
    {
        GPBUtil::checkMessage($var, \Eftypay\Integrators\CommissionSettings::class);
        $this->commissionSettings = $var;

        return $this;
    }

    /**
     * status contains the status and sub-status of a transaction. The key is the stringified version of the eftypay.transactions.activity.TransactionStatus enum.
     *
     * Generated from protobuf field <code>map<string, .eftypay.transactions.activity.TransactionSubStatus> status = 18;</code>
     * @return \Google\Protobuf\Internal\MapField
     */
    public function getStatus()
    {
        return $this->status;
    }

    /**
     * status contains the status and sub-status of a transaction. The key is the stringified version of the eftypay.transactions.activity.TransactionStatus enum.
     *
     * Generated from protobuf field <code>map<string, .eftypay.transactions.activity.TransactionSubStatus> status = 18;</code>
     * @param array|\Google\Protobuf\Internal\MapField $var
     * @return $this
     */
    public function setStatus($var)
    {
        $arr = GPBUtil::checkMapField($var, \Google\Protobuf\Internal\GPBType::STRING, \Google\Protobuf\Internal\GPBType::ENUM, \Eftypay\Transactions\Activity\TransactionSubStatus::class);
        $this->status = $arr;

        return $this;
    }

    /**
     * auditTrail contains an audit trail for changes to the transaction. The audit trail is immutable.
     *
     * Generated from protobuf field <code>repeated .eftypay.transactions.activity.TransactionActivity auditTrail = 19;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getAuditTrail()
    {
        return $this->auditTrail;
    }

    /**
     * auditTrail contains an audit trail for changes to the transaction. The audit trail is immutable.
     *
     * Generated from protobuf field <code>repeated .eftypay.transactions.activity.TransactionActivity auditTrail = 19;</code>
     * @param array<\Eftypay\Transactions\Activity\TransactionActivity>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setAuditTrail($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Eftypay\Transactions\Activity\TransactionActivity::class);
        $this->auditTrail = $arr;

        return $this;
    }

    /**
     * messageHistory contains messages for the transaction. The message history is immutable.
     *
     * Generated from protobuf field <code>repeated .eftypay.messages.Message messageHistory = 20;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getMessageHistory()
    {
        return $this->messageHistory;
    }

    /**
     * messageHistory contains messages for the transaction. The message history is immutable.
     *
     * Generated from protobuf field <code>repeated .eftypay.messages.Message messageHistory = 20;</code>
     * @param array<\Eftypay\Messages\Message>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setMessageHistory($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Eftypay\Messages\Message::class);
        $this->messageHistory = $arr;

        return $this;
    }

    /**
     * utmParameters contains UTM tracking parameters for the transaction.
     *
     * Generated from protobuf field <code>.eftypay.transactions.UtmParameters utmParameters = 21;</code>
     * @return \Eftypay\Transactions\UtmParameters|null
     */
    public function getUtmParameters()
    {
        return $this->utmParameters;
    }

    public function hasUtmParameters()
    {
        return isset($this->utmParameters);
    }

    public function clearUtmParameters()
    {
        unset($this->utmParameters);
    }

    /**
     * utmParameters contains UTM tracking parameters for the transaction.
     *
     * Generated from protobuf field <code>.eftypay.transactions.UtmParameters utmParameters = 21;</code>
     * @param \Eftypay\Transactions\UtmParameters $var
     * @return $this
     */
    public function setUtmParameters($var)
    {
        GPBUtil::checkMessage($var, \Eftypay\Transactions\UtmParameters::class);
        $this->utmParameters = $var;

        return $this;
    }

    /**
     * checkoutDetails contains details re. the checkout status & URL for the transaction.
     *
     * Generated from protobuf field <code>.eftypay.payments.CheckoutDetails checkoutDetails = 22;</code>
     * @return \Eftypay\Payments\CheckoutDetails|null
     */
    public function getCheckoutDetails()
    {
        return $this->checkoutDetails;
    }

    public function hasCheckoutDetails()
    {
        return isset($this->checkoutDetails);
    }

    public function clearCheckoutDetails()
    {
        unset($this->checkoutDetails);
    }

    /**
     * checkoutDetails contains details re. the checkout status & URL for the transaction.
     *
     * Generated from protobuf field <code>.eftypay.payments.CheckoutDetails checkoutDetails = 22;</code>
     * @param \Eftypay\Payments\CheckoutDetails $var
     * @return $this
     */
    public function setCheckoutDetails($var)
    {
        GPBUtil::checkMessage($var, \Eftypay\Payments\CheckoutDetails::class);
        $this->checkoutDetails = $var;

        return $this;
    }

    /**
     * created is the timestamp the transaction was created.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp created = 23;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getCreated()
    {
        return $this->created;
    }

    public function hasCreated()
    {
        return isset($this->created);
    }

    public function clearCreated()
    {
        unset($this->created);
    }

    /**
     * created is the timestamp the transaction was created.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp created = 23;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setCreated($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->created = $var;

        return $this;
    }

    /**
     * createdBy is the user that created the transaction.
     *
     * Generated from protobuf field <code>.eftypay.users.User createdBy = 24;</code>
     * @return \Eftypay\Users\User|null
     */
    public function getCreatedBy()
    {
        return $this->createdBy;
    }

    public function hasCreatedBy()
    {
        return isset($this->createdBy);
    }

    public function clearCreatedBy()
    {
        unset($this->createdBy);
    }

    /**
     * createdBy is the user that created the transaction.
     *
     * Generated from protobuf field <code>.eftypay.users.User createdBy = 24;</code>
     * @param \Eftypay\Users\User $var
     * @return $this
     */
    public function setCreatedBy($var)
    {
        GPBUtil::checkMessage($var, \Eftypay\Users\User::class);
        $this->createdBy = $var;

        return $this;
    }

    /**
     * update is the timestamp the transaction was last updated.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp updated = 25;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getUpdated()
    {
        return $this->updated;
    }

    public function hasUpdated()
    {
        return isset($this->updated);
    }

    public function clearUpdated()
    {
        unset($this->updated);
    }

    /**
     * update is the timestamp the transaction was last updated.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp updated = 25;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setUpdated($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->updated = $var;

        return $this;
    }

    /**
     * updatedBy is the user that last updated the transaction.
     *
     * Generated from protobuf field <code>.eftypay.users.User updatedBy = 26;</code>
     * @return \Eftypay\Users\User|null
     */
    public function getUpdatedBy()
    {
        return $this->updatedBy;
    }

    public function hasUpdatedBy()
    {
        return isset($this->updatedBy);
    }

    public function clearUpdatedBy()
    {
        unset($this->updatedBy);
    }

    /**
     * updatedBy is the user that last updated the transaction.
     *
     * Generated from protobuf field <code>.eftypay.users.User updatedBy = 26;</code>
     * @param \Eftypay\Users\User $var
     * @return $this
     */
    public function setUpdatedBy($var)
    {
        GPBUtil::checkMessage($var, \Eftypay\Users\User::class);
        $this->updatedBy = $var;

        return $this;
    }

    /**
     * completed is the timestamp the transaction was finalized.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp finalized = 27;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getFinalized()
    {
        return $this->finalized;
    }

    public function hasFinalized()
    {
        return isset($this->finalized);
    }

    public function clearFinalized()
    {
        unset($this->finalized);
    }

    /**
     * completed is the timestamp the transaction was finalized.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp finalized = 27;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setFinalized($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->finalized = $var;

        return $this;
    }

    /**
     * initiatedBy indicates which type of party initiated the transaction.
     * The backend uses different email templates / workflow based on the type of party that initiated the transaction.
     *
     * Generated from protobuf field <code>.eftypay.transactions.activity.TransactionParty initiatedBy = 28;</code>
     * @return int
     */
    public function getInitiatedBy()
    {
        return $this->initiatedBy;
    }

    /**
     * initiatedBy indicates which type of party initiated the transaction.
     * The backend uses different email templates / workflow based on the type of party that initiated the transaction.
     *
     * Generated from protobuf field <code>.eftypay.transactions.activity.TransactionParty initiatedBy = 28;</code>
     * @param int $var
     * @return $this
     */
    public function setInitiatedBy($var)
    {
        GPBUtil::checkEnum($var, \Eftypay\Transactions\Activity\TransactionParty::class);
        $this->initiatedBy = $var;

        return $this;
    }

    /**
     * metaData contains transaction meta-data. This can be set and updated by all parties of a transaction.
     *
     * Generated from protobuf field <code>map<string, string> metaData = 29;</code>
     * @return \Google\Protobuf\Internal\MapField
     */
    public function getMetaData()
    {
        return $this->metaData;
    }

    /**
     * metaData contains transaction meta-data. This can be set and updated by all parties of a transaction.
     *
     * Generated from protobuf field <code>map<string, string> metaData = 29;</code>
     * @param array|\Google\Protobuf\Internal\MapField $var
     * @return $this
     */
    public function setMetaData($var)
    {
        $arr = GPBUtil::checkMapField($var, \Google\Protobuf\Internal\GPBType::STRING, \Google\Protobuf\Internal\GPBType::STRING);
        $this->metaData = $arr;

        return $this;
    }

}

