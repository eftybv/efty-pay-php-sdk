<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: public/users/user.proto

namespace Eftypay\Users;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * User represents a buyer, seller or administrator.
 *
 * Generated from protobuf message <code>eftypay.users.User</code>
 */
class User extends \Google\Protobuf\Internal\Message
{
    /**
     * id is the unique ID of the party. The ID is a compressed 22 characters UUID. The ID is autogenerated.
     *
     * Generated from protobuf field <code>string id = 1;</code>
     */
    protected $id = '';
    /**
     * firstName is the first name of the user.
     *
     * Generated from protobuf field <code>string firstName = 2;</code>
     */
    protected $firstName = '';
    /**
     * lastName is the last name of the user.
     *
     * Generated from protobuf field <code>string lastName = 3;</code>
     */
    protected $lastName = '';
    /**
     * email is the email address for the user. The email address is unique within the integrator scope.
     *
     * Generated from protobuf field <code>string email = 4;</code>
     */
    protected $email = '';
    /**
     * username is reserved for a unique username for the user, and can be used if we want to allow buyers / sellers access to Efty Pay data at a later stage.
     *
     * Generated from protobuf field <code>string username = 5;</code>
     */
    protected $username = '';
    /**
     * password is reserved for the password for the user, and can be used if we want to allow buyers / sellers access to Efty Pay data at a later stage.
     * The password is stored encrypted and never returned in get user calls.
     *
     * Generated from protobuf field <code>string password = 6;</code>
     */
    protected $password = '';
    /**
     * apiCredentials contains the API credentials for the user. Not all user types are able to access the API.
     *
     * Generated from protobuf field <code>.eftypay.users.ApiCredentials apiCredentials = 7;</code>
     */
    protected $apiCredentials = null;
    /**
     * userType indicates the user type of the user.
     *
     * Generated from protobuf field <code>.eftypay.users.UserType userType = 9;</code>
     */
    protected $userType = 0;
    /**
     * companyRegistrationNumber is an optional field for the company registration number for the user. If set this is shown on the generated invoices.
     *
     * Generated from protobuf field <code>string companyRegistrationNumber = 12;</code>
     */
    protected $companyRegistrationNumber = '';
    /**
     * companyName is an optional field for the company name of the user. If set this is shown on the generated invoices.
     *
     * Generated from protobuf field <code>string companyName = 13;</code>
     */
    protected $companyName = '';
    /**
     * companyAddress contains the address details for the user. In case of a business user, this contains the business address. If set this is shown on the generated invoices.
     *
     * Generated from protobuf field <code>.eftypay.common.Address companyAddress = 14;</code>
     */
    protected $companyAddress = null;
    /**
     * vatSettings contains the VAT settings to be applied to payouts for a user of type BUYER, SELLER or INTEGRATOR.
     *
     * Generated from protobuf field <code>.eftypay.common.VatSettings vatSettings = 15;</code>
     */
    protected $vatSettings = null;
    /**
     * status contains the User status for the user.
     *
     * Generated from protobuf field <code>.eftypay.users.UserStatus status = 17;</code>
     */
    protected $status = 0;
    /**
     * created is the timestamp the user record was created.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp created = 18;</code>
     */
    protected $created = null;
    /**
     * updated is the timestamp the user record was last updated.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp updated = 19;</code>
     */
    protected $updated = null;
    /**
     * representsCompany indicates if this user represents a company.
     *
     * Generated from protobuf field <code>bool representsCompany = 20;</code>
     */
    protected $representsCompany = false;
    /**
     * externalId contains the external user ID. This is used for encrypted public links, so the system can lookup the user (as we don't want to share the internal user ID, which is also used as API key).
     *
     * Generated from protobuf field <code>string externalId = 21;</code>
     */
    protected $externalId = '';
    /**
     * externalIntegratorId contains the external integrator ID. This is used for encrypted public links, so the system can lookup the integrator (as we don't want to share the internal integrator ID, which is also used as API key).
     *
     * Generated from protobuf field <code>string externalIntegratorId = 22;</code>
     */
    protected $externalIntegratorId = '';
    /**
     * encryptionHexKey contains the 32 character key used for encrypting / decrypting links and other data with AES-256.
     *
     * Generated from protobuf field <code>string encryptionHexKey = 23;</code>
     */
    protected $encryptionHexKey = '';
    /**
     * phoneNumber contains the phone number for the user.
     *
     * Generated from protobuf field <code>string phoneNumber = 24;</code>
     */
    protected $phoneNumber = '';
    /**
     * paymentDetails contains the payment partner integration details for the user.
     *
     * Generated from protobuf field <code>.eftypay.payments.PaymentDetails paymentDetails = 26;</code>
     */
    protected $paymentDetails = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $id
     *           id is the unique ID of the party. The ID is a compressed 22 characters UUID. The ID is autogenerated.
     *     @type string $firstName
     *           firstName is the first name of the user.
     *     @type string $lastName
     *           lastName is the last name of the user.
     *     @type string $email
     *           email is the email address for the user. The email address is unique within the integrator scope.
     *     @type string $username
     *           username is reserved for a unique username for the user, and can be used if we want to allow buyers / sellers access to Efty Pay data at a later stage.
     *     @type string $password
     *           password is reserved for the password for the user, and can be used if we want to allow buyers / sellers access to Efty Pay data at a later stage.
     *           The password is stored encrypted and never returned in get user calls.
     *     @type \Eftypay\Users\ApiCredentials $apiCredentials
     *           apiCredentials contains the API credentials for the user. Not all user types are able to access the API.
     *     @type int $userType
     *           userType indicates the user type of the user.
     *     @type string $companyRegistrationNumber
     *           companyRegistrationNumber is an optional field for the company registration number for the user. If set this is shown on the generated invoices.
     *     @type string $companyName
     *           companyName is an optional field for the company name of the user. If set this is shown on the generated invoices.
     *     @type \Eftypay\Common\Address $companyAddress
     *           companyAddress contains the address details for the user. In case of a business user, this contains the business address. If set this is shown on the generated invoices.
     *     @type \Eftypay\Common\VatSettings $vatSettings
     *           vatSettings contains the VAT settings to be applied to payouts for a user of type BUYER, SELLER or INTEGRATOR.
     *     @type int $status
     *           status contains the User status for the user.
     *     @type \Google\Protobuf\Timestamp $created
     *           created is the timestamp the user record was created.
     *     @type \Google\Protobuf\Timestamp $updated
     *           updated is the timestamp the user record was last updated.
     *     @type bool $representsCompany
     *           representsCompany indicates if this user represents a company.
     *     @type string $externalId
     *           externalId contains the external user ID. This is used for encrypted public links, so the system can lookup the user (as we don't want to share the internal user ID, which is also used as API key).
     *     @type string $externalIntegratorId
     *           externalIntegratorId contains the external integrator ID. This is used for encrypted public links, so the system can lookup the integrator (as we don't want to share the internal integrator ID, which is also used as API key).
     *     @type string $encryptionHexKey
     *           encryptionHexKey contains the 32 character key used for encrypting / decrypting links and other data with AES-256.
     *     @type string $phoneNumber
     *           phoneNumber contains the phone number for the user.
     *     @type \Eftypay\Payments\PaymentDetails $paymentDetails
     *           paymentDetails contains the payment partner integration details for the user.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\PBPublic\Users\User::initOnce();
        parent::__construct($data);
    }

    /**
     * id is the unique ID of the party. The ID is a compressed 22 characters UUID. The ID is autogenerated.
     *
     * Generated from protobuf field <code>string id = 1;</code>
     * @return string
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * id is the unique ID of the party. The ID is a compressed 22 characters UUID. The ID is autogenerated.
     *
     * Generated from protobuf field <code>string id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkString($var, True);
        $this->id = $var;

        return $this;
    }

    /**
     * firstName is the first name of the user.
     *
     * Generated from protobuf field <code>string firstName = 2;</code>
     * @return string
     */
    public function getFirstName()
    {
        return $this->firstName;
    }

    /**
     * firstName is the first name of the user.
     *
     * Generated from protobuf field <code>string firstName = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setFirstName($var)
    {
        GPBUtil::checkString($var, True);
        $this->firstName = $var;

        return $this;
    }

    /**
     * lastName is the last name of the user.
     *
     * Generated from protobuf field <code>string lastName = 3;</code>
     * @return string
     */
    public function getLastName()
    {
        return $this->lastName;
    }

    /**
     * lastName is the last name of the user.
     *
     * Generated from protobuf field <code>string lastName = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setLastName($var)
    {
        GPBUtil::checkString($var, True);
        $this->lastName = $var;

        return $this;
    }

    /**
     * email is the email address for the user. The email address is unique within the integrator scope.
     *
     * Generated from protobuf field <code>string email = 4;</code>
     * @return string
     */
    public function getEmail()
    {
        return $this->email;
    }

    /**
     * email is the email address for the user. The email address is unique within the integrator scope.
     *
     * Generated from protobuf field <code>string email = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setEmail($var)
    {
        GPBUtil::checkString($var, True);
        $this->email = $var;

        return $this;
    }

    /**
     * username is reserved for a unique username for the user, and can be used if we want to allow buyers / sellers access to Efty Pay data at a later stage.
     *
     * Generated from protobuf field <code>string username = 5;</code>
     * @return string
     */
    public function getUsername()
    {
        return $this->username;
    }

    /**
     * username is reserved for a unique username for the user, and can be used if we want to allow buyers / sellers access to Efty Pay data at a later stage.
     *
     * Generated from protobuf field <code>string username = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setUsername($var)
    {
        GPBUtil::checkString($var, True);
        $this->username = $var;

        return $this;
    }

    /**
     * password is reserved for the password for the user, and can be used if we want to allow buyers / sellers access to Efty Pay data at a later stage.
     * The password is stored encrypted and never returned in get user calls.
     *
     * Generated from protobuf field <code>string password = 6;</code>
     * @return string
     */
    public function getPassword()
    {
        return $this->password;
    }

    /**
     * password is reserved for the password for the user, and can be used if we want to allow buyers / sellers access to Efty Pay data at a later stage.
     * The password is stored encrypted and never returned in get user calls.
     *
     * Generated from protobuf field <code>string password = 6;</code>
     * @param string $var
     * @return $this
     */
    public function setPassword($var)
    {
        GPBUtil::checkString($var, True);
        $this->password = $var;

        return $this;
    }

    /**
     * apiCredentials contains the API credentials for the user. Not all user types are able to access the API.
     *
     * Generated from protobuf field <code>.eftypay.users.ApiCredentials apiCredentials = 7;</code>
     * @return \Eftypay\Users\ApiCredentials|null
     */
    public function getApiCredentials()
    {
        return $this->apiCredentials;
    }

    public function hasApiCredentials()
    {
        return isset($this->apiCredentials);
    }

    public function clearApiCredentials()
    {
        unset($this->apiCredentials);
    }

    /**
     * apiCredentials contains the API credentials for the user. Not all user types are able to access the API.
     *
     * Generated from protobuf field <code>.eftypay.users.ApiCredentials apiCredentials = 7;</code>
     * @param \Eftypay\Users\ApiCredentials $var
     * @return $this
     */
    public function setApiCredentials($var)
    {
        GPBUtil::checkMessage($var, \Eftypay\Users\ApiCredentials::class);
        $this->apiCredentials = $var;

        return $this;
    }

    /**
     * userType indicates the user type of the user.
     *
     * Generated from protobuf field <code>.eftypay.users.UserType userType = 9;</code>
     * @return int
     */
    public function getUserType()
    {
        return $this->userType;
    }

    /**
     * userType indicates the user type of the user.
     *
     * Generated from protobuf field <code>.eftypay.users.UserType userType = 9;</code>
     * @param int $var
     * @return $this
     */
    public function setUserType($var)
    {
        GPBUtil::checkEnum($var, \Eftypay\Users\UserType::class);
        $this->userType = $var;

        return $this;
    }

    /**
     * companyRegistrationNumber is an optional field for the company registration number for the user. If set this is shown on the generated invoices.
     *
     * Generated from protobuf field <code>string companyRegistrationNumber = 12;</code>
     * @return string
     */
    public function getCompanyRegistrationNumber()
    {
        return $this->companyRegistrationNumber;
    }

    /**
     * companyRegistrationNumber is an optional field for the company registration number for the user. If set this is shown on the generated invoices.
     *
     * Generated from protobuf field <code>string companyRegistrationNumber = 12;</code>
     * @param string $var
     * @return $this
     */
    public function setCompanyRegistrationNumber($var)
    {
        GPBUtil::checkString($var, True);
        $this->companyRegistrationNumber = $var;

        return $this;
    }

    /**
     * companyName is an optional field for the company name of the user. If set this is shown on the generated invoices.
     *
     * Generated from protobuf field <code>string companyName = 13;</code>
     * @return string
     */
    public function getCompanyName()
    {
        return $this->companyName;
    }

    /**
     * companyName is an optional field for the company name of the user. If set this is shown on the generated invoices.
     *
     * Generated from protobuf field <code>string companyName = 13;</code>
     * @param string $var
     * @return $this
     */
    public function setCompanyName($var)
    {
        GPBUtil::checkString($var, True);
        $this->companyName = $var;

        return $this;
    }

    /**
     * companyAddress contains the address details for the user. In case of a business user, this contains the business address. If set this is shown on the generated invoices.
     *
     * Generated from protobuf field <code>.eftypay.common.Address companyAddress = 14;</code>
     * @return \Eftypay\Common\Address|null
     */
    public function getCompanyAddress()
    {
        return $this->companyAddress;
    }

    public function hasCompanyAddress()
    {
        return isset($this->companyAddress);
    }

    public function clearCompanyAddress()
    {
        unset($this->companyAddress);
    }

    /**
     * companyAddress contains the address details for the user. In case of a business user, this contains the business address. If set this is shown on the generated invoices.
     *
     * Generated from protobuf field <code>.eftypay.common.Address companyAddress = 14;</code>
     * @param \Eftypay\Common\Address $var
     * @return $this
     */
    public function setCompanyAddress($var)
    {
        GPBUtil::checkMessage($var, \Eftypay\Common\Address::class);
        $this->companyAddress = $var;

        return $this;
    }

    /**
     * vatSettings contains the VAT settings to be applied to payouts for a user of type BUYER, SELLER or INTEGRATOR.
     *
     * Generated from protobuf field <code>.eftypay.common.VatSettings vatSettings = 15;</code>
     * @return \Eftypay\Common\VatSettings|null
     */
    public function getVatSettings()
    {
        return $this->vatSettings;
    }

    public function hasVatSettings()
    {
        return isset($this->vatSettings);
    }

    public function clearVatSettings()
    {
        unset($this->vatSettings);
    }

    /**
     * vatSettings contains the VAT settings to be applied to payouts for a user of type BUYER, SELLER or INTEGRATOR.
     *
     * Generated from protobuf field <code>.eftypay.common.VatSettings vatSettings = 15;</code>
     * @param \Eftypay\Common\VatSettings $var
     * @return $this
     */
    public function setVatSettings($var)
    {
        GPBUtil::checkMessage($var, \Eftypay\Common\VatSettings::class);
        $this->vatSettings = $var;

        return $this;
    }

    /**
     * status contains the User status for the user.
     *
     * Generated from protobuf field <code>.eftypay.users.UserStatus status = 17;</code>
     * @return int
     */
    public function getStatus()
    {
        return $this->status;
    }

    /**
     * status contains the User status for the user.
     *
     * Generated from protobuf field <code>.eftypay.users.UserStatus status = 17;</code>
     * @param int $var
     * @return $this
     */
    public function setStatus($var)
    {
        GPBUtil::checkEnum($var, \Eftypay\Users\UserStatus::class);
        $this->status = $var;

        return $this;
    }

    /**
     * created is the timestamp the user record was created.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp created = 18;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getCreated()
    {
        return $this->created;
    }

    public function hasCreated()
    {
        return isset($this->created);
    }

    public function clearCreated()
    {
        unset($this->created);
    }

    /**
     * created is the timestamp the user record was created.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp created = 18;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setCreated($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->created = $var;

        return $this;
    }

    /**
     * updated is the timestamp the user record was last updated.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp updated = 19;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getUpdated()
    {
        return $this->updated;
    }

    public function hasUpdated()
    {
        return isset($this->updated);
    }

    public function clearUpdated()
    {
        unset($this->updated);
    }

    /**
     * updated is the timestamp the user record was last updated.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp updated = 19;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setUpdated($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->updated = $var;

        return $this;
    }

    /**
     * representsCompany indicates if this user represents a company.
     *
     * Generated from protobuf field <code>bool representsCompany = 20;</code>
     * @return bool
     */
    public function getRepresentsCompany()
    {
        return $this->representsCompany;
    }

    /**
     * representsCompany indicates if this user represents a company.
     *
     * Generated from protobuf field <code>bool representsCompany = 20;</code>
     * @param bool $var
     * @return $this
     */
    public function setRepresentsCompany($var)
    {
        GPBUtil::checkBool($var);
        $this->representsCompany = $var;

        return $this;
    }

    /**
     * externalId contains the external user ID. This is used for encrypted public links, so the system can lookup the user (as we don't want to share the internal user ID, which is also used as API key).
     *
     * Generated from protobuf field <code>string externalId = 21;</code>
     * @return string
     */
    public function getExternalId()
    {
        return $this->externalId;
    }

    /**
     * externalId contains the external user ID. This is used for encrypted public links, so the system can lookup the user (as we don't want to share the internal user ID, which is also used as API key).
     *
     * Generated from protobuf field <code>string externalId = 21;</code>
     * @param string $var
     * @return $this
     */
    public function setExternalId($var)
    {
        GPBUtil::checkString($var, True);
        $this->externalId = $var;

        return $this;
    }

    /**
     * externalIntegratorId contains the external integrator ID. This is used for encrypted public links, so the system can lookup the integrator (as we don't want to share the internal integrator ID, which is also used as API key).
     *
     * Generated from protobuf field <code>string externalIntegratorId = 22;</code>
     * @return string
     */
    public function getExternalIntegratorId()
    {
        return $this->externalIntegratorId;
    }

    /**
     * externalIntegratorId contains the external integrator ID. This is used for encrypted public links, so the system can lookup the integrator (as we don't want to share the internal integrator ID, which is also used as API key).
     *
     * Generated from protobuf field <code>string externalIntegratorId = 22;</code>
     * @param string $var
     * @return $this
     */
    public function setExternalIntegratorId($var)
    {
        GPBUtil::checkString($var, True);
        $this->externalIntegratorId = $var;

        return $this;
    }

    /**
     * encryptionHexKey contains the 32 character key used for encrypting / decrypting links and other data with AES-256.
     *
     * Generated from protobuf field <code>string encryptionHexKey = 23;</code>
     * @return string
     */
    public function getEncryptionHexKey()
    {
        return $this->encryptionHexKey;
    }

    /**
     * encryptionHexKey contains the 32 character key used for encrypting / decrypting links and other data with AES-256.
     *
     * Generated from protobuf field <code>string encryptionHexKey = 23;</code>
     * @param string $var
     * @return $this
     */
    public function setEncryptionHexKey($var)
    {
        GPBUtil::checkString($var, True);
        $this->encryptionHexKey = $var;

        return $this;
    }

    /**
     * phoneNumber contains the phone number for the user.
     *
     * Generated from protobuf field <code>string phoneNumber = 24;</code>
     * @return string
     */
    public function getPhoneNumber()
    {
        return $this->phoneNumber;
    }

    /**
     * phoneNumber contains the phone number for the user.
     *
     * Generated from protobuf field <code>string phoneNumber = 24;</code>
     * @param string $var
     * @return $this
     */
    public function setPhoneNumber($var)
    {
        GPBUtil::checkString($var, True);
        $this->phoneNumber = $var;

        return $this;
    }

    /**
     * paymentDetails contains the payment partner integration details for the user.
     *
     * Generated from protobuf field <code>.eftypay.payments.PaymentDetails paymentDetails = 26;</code>
     * @return \Eftypay\Payments\PaymentDetails|null
     */
    public function getPaymentDetails()
    {
        return $this->paymentDetails;
    }

    public function hasPaymentDetails()
    {
        return isset($this->paymentDetails);
    }

    public function clearPaymentDetails()
    {
        unset($this->paymentDetails);
    }

    /**
     * paymentDetails contains the payment partner integration details for the user.
     *
     * Generated from protobuf field <code>.eftypay.payments.PaymentDetails paymentDetails = 26;</code>
     * @param \Eftypay\Payments\PaymentDetails $var
     * @return $this
     */
    public function setPaymentDetails($var)
    {
        GPBUtil::checkMessage($var, \Eftypay\Payments\PaymentDetails::class);
        $this->paymentDetails = $var;

        return $this;
    }

}

