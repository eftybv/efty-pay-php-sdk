<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: public/users/user.proto

namespace Eftypay\Users;

use UnexpectedValueException;

/**
 * UserStatus indicates if a user is active, disabled or banned.
 * Temporarily disabled & banned users cannot be used in new transactions.
 *
 * Protobuf type <code>eftypay.users.UserStatus</code>
 */
class UserStatus
{
    /**
     * USER_STATUS_NONE is the default user status (which is zero and not transmitted on the wire).
     *
     * Generated from protobuf enum <code>USER_STATUS_NONE = 0;</code>
     */
    const USER_STATUS_NONE = 0;
    /**
     * ACTIVE means the user is active and can use the system.
     *
     * Generated from protobuf enum <code>ACTIVE = 1;</code>
     */
    const ACTIVE = 1;
    /**
     * DISABLED means the user is (temporarily) disabled and cannot use or access the system / their transaction data.
     *
     * Generated from protobuf enum <code>DISABLED = 2;</code>
     */
    const DISABLED = 2;
    /**
     * BANNED means the user is banned and permanently lost access to the system.
     *
     * Generated from protobuf enum <code>BANNED = 3;</code>
     */
    const BANNED = 3;

    private static $valueToName = [
        self::USER_STATUS_NONE => 'USER_STATUS_NONE',
        self::ACTIVE => 'ACTIVE',
        self::DISABLED => 'DISABLED',
        self::BANNED => 'BANNED',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

